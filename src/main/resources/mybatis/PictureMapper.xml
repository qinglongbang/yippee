<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.akina.mapper.PictureMapper">
    <resultMap id="BaseResultMap" type="com.akina.bean.Picture">
        <id column="pic_id" property="picId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="pic_name" property="picName" jdbcType="VARCHAR"/>
        <result column="pic_ispixiv" property="picIspixiv" jdbcType="INTEGER"/>
        <result column="pic_http_path" property="picHttpPath" jdbcType="VARCHAR"/>
        <result column="pic_floor_price" property="picFloorPrice" jdbcType="VARCHAR"/>
        <result column="pic_present_price" property="picPresentPrice" jdbcType="VARCHAR"/>
        <result column="pic_trim_times" property="picTrimTimes" jdbcType="INTEGER"/>
        <result column="pic_ state" property="picState" jdbcType="INTEGER"/>
        <result column="pic_key" property="picKey" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from picture
    where pic_id = #{picId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.akina.bean.Picture">
    insert into picture (pic_id, user_id, pic_name,
    pic_ispixiv, pic_http_path, pic_floor_price,
    pic_present_price, pic_trim_times, "pic_ state",
    pic_key, create_time)
    values (#{picId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{picName,jdbcType=VARCHAR},
    #{picIspixiv,jdbcType=INTEGER}, #{picHttpPath,jdbcType=VARCHAR}, #{picFloorPrice,jdbcType=VARCHAR},
    #{picPresentPrice,jdbcType=VARCHAR}, #{picTrimTimes,jdbcType=INTEGER}, #{picState,jdbcType=INTEGER},
    #{picKey,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.akina.bean.Picture">
    update picture
    set user_id = #{userId,jdbcType=INTEGER},
    pic_name = #{picName,jdbcType=VARCHAR},
    pic_ispixiv = #{picIspixiv,jdbcType=INTEGER},
    pic_http_path = #{picHttpPath,jdbcType=VARCHAR},
    pic_floor_price = #{picFloorPrice,jdbcType=VARCHAR},
    pic_present_price = #{picPresentPrice,jdbcType=VARCHAR},
    pic_trim_times = #{picTrimTimes,jdbcType=INTEGER},
    "pic_ state" = #{picState,jdbcType=INTEGER},
    pic_key = #{picKey,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP}
    where pic_id = #{picId,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select pic_id, user_id, pic_name, pic_ispixiv, pic_http_path, pic_floor_price, pic_present_price,
    pic_trim_times, "pic_ state", pic_key, create_time
    from picture
    where pic_id = #{picId,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">

    select pic_id, user_id, pic_name, pic_ispixiv, pic_http_path, pic_floor_price, pic_present_price,
    pic_trim_times, "pic_ state", pic_key, create_time
    from picture
  </select>

    <!--===============================================================================-->
    <!--定义包含用户返回集合-->
    <resultMap extends="BaseResultMap" type="com.akina.bean.Picture" id="includeUser">
        <!--包含用户-->
        <association property="user" column="user_id" select="com.akina.mapper.UserMapper.selectByPrimaryKey"/>
    </resultMap>
</mapper>