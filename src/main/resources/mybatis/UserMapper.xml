<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.akina.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.akina.bean.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_mail" property="userMail" jdbcType="VARCHAR"/>
        <result column="user_pwd" property="userPwd" jdbcType="VARCHAR"/>
        <result column="user_pixiv" property="userPixiv" jdbcType="VARCHAR"/>
        <result column="user_abstract" property="userAbstract" jdbcType="VARCHAR"/>
        <result column="user_head_path" property="userHeadPath" jdbcType="VARCHAR"/>
        <result column="user_pay_path" property="userPayPath" jdbcType="VARCHAR"/>
        <result column="user_integral" property="userIntegral" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.akina.bean.User">
        insert into user (user_id ,user_name, user_mail,
        user_pwd)
        values (#{userId,jdbcType=INTEGER},
        (select CONCAT('yippee0',t.user_id+1) from user t order by t.user_id desc  limit 0,1),
         #{userMail,jdbcType=VARCHAR},
        #{userPwd,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.akina.bean.User">
        update user
        set user_name = #{userName,jdbcType=VARCHAR},
        user_mail = #{userMail,jdbcType=VARCHAR},
        user_pwd = #{userPwd,jdbcType=VARCHAR},
        user_pixiv = #{userPixiv,jdbcType=VARCHAR},
        user_abstract = #{userAbstract,jdbcType=VARCHAR},
        user_head_path = #{userHeadPath,jdbcType=VARCHAR},
        user_pay_path = #{userPayPath,jdbcType=VARCHAR},
        user_integral = #{userIntegral,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select user_id, user_name, user_mail, user_pwd, user_pixiv, user_abstract, user_head_path,
        user_pay_path, user_integral, create_time
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select user_id, user_name, user_mail, user_pwd, user_pixiv, user_abstract, user_head_path,
        user_pay_path, user_integral, create_time
        from user
    </select>

    <!-- 添加的查询sql  -->
    <select id="selectUserBypram" resultMap="BaseResultMap">
    select * from `user` u where  u.user_mail = #{mail} and u.user_pwd= #{pwd}
    </select>
    <!-- 按照邮箱查询用户sql  -->
    <select id="selectUserByMail" resultMap="BaseResultMap">
        select * from `user` u where  u.user_mail = #{mail}
    </select>
</mapper>