package com.akina.mapper;

import com.akina.bean.Picture;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface PictureMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table picture
     *
     * @mbggenerated Sat May 20 23:37:32 CST 2017
     */
    int deleteByPrimaryKey(Integer picId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table picture
     *
     * @mbggenerated Sat May 20 23:37:32 CST 2017
     */
    int insert(Picture record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table picture
     *
     * @mbggenerated Sat May 20 23:37:32 CST 2017
     */
    Picture selectByPrimaryKey(Integer picId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table picture
     *
     * @mbggenerated Sat May 20 23:37:32 CST 2017
     */
    List<Picture> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table picture
     *
     * @mbggenerated Sat May 20 23:37:32 CST 2017
     */
    int updateByPrimaryKey(Picture record);


    /**=========================================================**/


    /**
     * 根据喜欢还有想购买的人数查询前参数位
     *
     * @param top 指定查询多少位
     * @return
     */
    List<Picture> findTopPic(@Param("top") Integer top);


    /***
     * 根据价格排序，取出前top位数据
     * @return
     */
    List<Picture> findPicByPriceorderTop(@Param("top") Integer top);

    /***
     * 根据投稿时间排序，取出前top位数据
     * @return
     */
    List<Picture> findPicByTimeorderTop(@Param("top") Integer top);


    /***
     *按条件查询画数量
     * @return
     */
    Integer findPicCount(@Param("s_str") String s_str);


    /**
     * 按条件查询画
     *
     * @param start       起始页数
     * @param size        每页显示条数
     * @param pic_stat    图片状态
     * @param s_str       搜索关键字  搜索画师名字或作品名字
     * @param time        是否按投稿时间排序
     * @param like_number 是否按照点赞数量排序
     * @param price       是否按照当前价格排序
     * @param user_id     用户id，当按照用户id查询的时候，其他几个条件置空就行（代码复用
     * @return
     */
    List<Picture> finPicByPram(@Param("start") Integer start, @Param("size") Integer size, @Param("pic_stat") Integer pic_stat, @Param("s_str") String s_str, @Param("time") Boolean time, @Param("like_number") Boolean like_number, @Param("price") Boolean price, @Param("user_id") Integer user_id);


    /**
     * pic_trim_times字段增加指定次数
     *
     * @param times
     * @return
     */
    Integer updateTrimTimes(@Param("times") Integer times);

    /***
     * 当前价格按照指定百分比上升
     * @param pic_id
     * @param tiaozheng
     * @return
     */
    Integer updateAddPresentPrice(@Param("pic_id") Integer pic_id, @Param("tiaozheng") Double tiaozheng);

    /***
     * 当前价格按照指定百分比下降
     * @param pic_id
     * @param tiaozheng
     * @return
     */
    Integer updateReducePresentPrice(@Param("pic_id") Integer pic_id, @Param("tiaozheng") Double tiaozheng);

}